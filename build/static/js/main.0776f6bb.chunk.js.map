{"version":3,"sources":["Header.js","Footer.js","About.js","serviceWorker.js","index.js"],"names":["Header","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","React","Component","Footer","About","src","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gMAgDeA,E,uKAzCX,OACE,yBAAKC,UAAU,UAEb,yBAAKA,UAAU,+CACX,yBAAKA,UAAU,0BAA0BC,GAAG,WACxC,uBAAGC,KAAK,cAAa,gDAE3B,4BAAQF,UAAU,iBAAiBG,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAClFC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACxE,0BAAMR,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BC,GAAG,0BAE3C,wBAAID,UAAU,0BACZ,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,WAAWE,KAAK,cAA7B,YAEF,wBAAIF,UAAU,YACZ,uBAAGA,UAAU,WAAWE,KAAK,kBAA7B,gBAEF,wBAAIF,UAAU,YACZ,uBAAGA,UAAU,WAAWE,KAAK,oCAA7B,wBAEF,wBAAIF,UAAU,YACZ,uBAAGA,UAAU,WAAWE,KAAK,6CAA7B,eAEF,wBAAIF,UAAU,YACZ,uBAAGA,UAAU,WAAWE,KAAK,gBAA7B,oB,GA9BKO,IAAMC,WCoBZC,E,uKApBP,OACI,yBAAKX,UAAU,UACP,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,2CAAf,yB,GANPS,IAAMC,WCiCZE,E,uKA/BP,OACI,yBAAKZ,UAAU,SACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,8CACf,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,gCACX,yBAAKa,IAAI,uBAAuBb,UAAU,eAAeC,GAAG,aAAaa,IAAI,QAEjF,yBAAKd,UAAU,cACX,wBAAIA,UAAU,iBAAd,YACA,uPAEA,2oB,GAjBpBS,IAAMC,WCUNK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,WAG1BJ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAE1BJ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,WD2GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.0776f6bb.chunk.js","sourcesContent":["import React from 'react';\n\n\n\nclass Header extends React.Component {\n\n  render() {\n    return (\n      <div className=\"Header\">\n          \n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <div className=\"col offset-md-1 rounded\" id=\"myTitle\">\n                <a href=\"index.html\"><h1>Lawrence Snead</h1></a>\n            </div>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            \n            <ul className=\"nav navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"index.html\">About |</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"portfolio.html\">Portfolio |</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"https://github.com/lawrencesnead\">GitHub Repository |</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"http://www.linkedin.com/in/lawrence-snead\">LinkedIn |</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"contact.html\">Contact</a>\n              </li>\n            </ul>\n          </div>\n\n        </nav>\n        \n\n        \n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <div className=\"Footer\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 col-xs-12 col-sm-12 col-lg-12\">\n                            Copyright &copy;\n                            </div>\n                        </div>\n                        </div>\n            </div>\n        )\n    }\n\n\n\n\n\n\n\n}\nexport default Footer;","import React from 'react';\n\nclass About extends React.Component {\n    render() {\n        return (\n            <div className=\"About\">\n                <div className=\"wrap\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-xs-12 col-md-12 col-lg-12 col-centered\">\n                            <div className=\"main-section rounded\">\n                                <div className=\"media\">\n                                    <div className=\"media-left media-top rounded\">\n                                        <img src=\"assets/images/Me.jpg\" className=\"media-object\" id=\"auth-image\" alt=\"me\"/>\n                                    </div>\n                                    <div className=\"media-body\">\n                                        <h2 className=\"media-heading\">About Me</h2>\n                                        <p>My name is Lawrence Snead, and I am 29 years old. I was born in Richmond, VA. I have lived in the Richmond area most of my life, moving around near by. I now live with my cat, Jasmine, in Ashland on the family farm. </p>\n\n                                        <p>I am currently employed as a loan processor at Presidential Bank Mortgage. They are a great company to work for, but I grow tired of the repetitive tasks every day. I have always enjoyed programming, and it's frustrating it took me this long to realize I needed to make a career out of it. When I was in 8th grade, I taught myself HTML with Microsoft Front Page and a book. I have also taken a few programming classNamees throughout my life, and I have a basic understanding of Python and Java. I am seeking a career change and have enrolled in a web development bootcamp to hone my skills like a fine blade.</p>\n                                    \n                                    </div>\n                                </div>\n\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default About;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './Header';\nimport Footer from './Footer';\nimport About from './About';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n  </React.StrictMode>,\n  document.getElementById('header'),\n  \n);\nReactDOM.render(\n  <React.StrictMode>\n    <About />\n  </React.StrictMode>,\n  document.getElementById('body')\n)\nReactDOM.render(\n  <React.StrictMode>\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById('footer')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}